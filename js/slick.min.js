!função(i) { "use strict"; "function" == tipoof define && define.amd ? define(["jquery"], i) : "indefinido"! = tipo de exportação ? module.exports = i(require("jquery ")) : i(jQuery) } (função(i) { " use strict "; var e = window.Slick || {}(e = function () { var e = 0; função de retorno(t, o) { var s, n = isto; n.defaults = { acessibilidade: !0, adaptiveHeight: !1, appendArrows: i(t), appendDots: i(t), setas: !0, asNavFor: null, prevArrow: '< button class = "slick-prev" aria-label = "Anterior" type = "button"> Anterior </ button> ', nextArrow: ' <botão class = "slick-next" aria-label = "Próximo" type = " botão "> Próximo </ button> ', autoplay: !1, autoplaySpeed: 3e3, centerMode: !1, centerPadding: " 50px ", cssEase: " facilidade ", customPage: function (e, t) { return i(' <button type = "button" />').text(t + 1) } }dots: !1, dotsClass: "slick-dots", draggable: !0, easing: "linear", edgeFriction: .35, fade: !1, focusOnSelect: !1, focusOnChange: !1, infinito: !0, initialSlide: 0, lazyLoad: "ondemand", mobilePrimeiro: !1, pauseOnHover: !0, pauseOnFocus: !0, pauseOnDotsHover: !1, respondTo: "window", responsivo: null, linhas: 1, rtl: !1, slide: "", slidesPerRow: 1, slidesToShow: 1, slidesToScroll: 1, velocidade: 500, deslize: !0, swipeToSlide: !1, touchMove: !0, touchThreshold: 5, useCSS: !0, useTransform: !0, variableWidth: !1, vertical: !1, verticalSwiping: !1, waitForAnimate: !0, zIndex: 1e3 }, n.initials = { animação: !1, arrastando: !1, autoPlayTimer: null, currentDirection: 0, currentLeft: nulo, currentSlide: 0, direção: 1, $ dots: null, listWidth: nulo, listHeight: nulo, loadIndex: 0, $ nextArrow: nulo, $ prevArrow: null, rolagem: !1, slideCount: null, slideWidth: null, $ slideTrack: null, $ slides: null, deslizante: !1, slideOffset: 0, swipeLeft: nulo, swiping: !1, $ list: null, touchObject: {}, transformsEnabled: !1, sem filtro: !1 }, i.extend(n, n.inicials), n.activeBreakpoint = nulo, n.animType = null, n.animProp = nulo, n.breakpoints = [], n.breakpointSettings = [], n.cssTransitions = !1, n.focussed = !1, n.interrupted = !1, n.hidden = "oculto", n.paused = !0, n.positionProp = null, n.respondTo = nulo, n.rowCount = 1, n.shouldClick = !0, n.$ slider = i(t), n.$ slidesCache = nulo, n.transformType = nulo, n.transitionType = nulo, n.visibilityChange = "visibilitychange", n.windowWidth = 0, n.windowTimer = null, s = i(t).data("slick") || {}, n.options = i.extend({}, n.defaults, o, s), n.currentSlide = n.options.initialSlide, n.originalSettings = n.options, void 0! == document.mozHidden ? (n.hidden = "mozHidden", n.visibilityChange = "mozvisibilitychange") : void 0! == documento.webkitHidden && (n.hidden = "webkitHidden", n.visibilityChange = "webkitvisibilitychange"), n.autoPlay = i.proxy(n.autoPlay, n), n.autoPlayclear = i.proxy(n.autoPlayclear, n), n.autoPlayIterator = i.proxy(n.autoPlayIterator, n), n.changeSlide = i.proxy(n.changeSlide, n), n.clickHandler = i.proxy(n.clickHandler, n), n.selecionarHandler = i.proxy(n.selectHandler, n), n.setPosition = i.proxy(n.setPosition, n), n.swipeHandler = i.proxy(n.swipeHandler, n), n.dragHandler = i.proxy(n.dragHandler, n), n.keyHandler = i.proxy(n.keyHandler, n), n.instanceUid = e++ , n.htmlExpr = / ^ (?: \ s * (<[\ w \ W] +>) [^ >] *) $ /, n.registerBreakpoints(), n.init(!0) }} ()).prototype.activateADA = function () { isso.$ slideTrack.find(". slick-active"). ({ "aria-hidden": "false" }).find("a, entrada, botão, selecione").attr({ tabindex: "0" }) }, e.prototype.addSlide = e.prototype.slickAdd = função(e, t, o) { var s = isso; if ("booleano" == tipo de t) o = t, t = nulo; else if (t < 0 || t > = s.slideCount ) return !1; s.unload(), "número" == typeof t ? 0 === t && 0 === s.$ slides.length ? i(e).appendTo(s.$ slideTrack) : o ? i(e).insertBefore(s.$ slides.eq(t)) : i(e).insertAfter(s.$ slides.eq(t)): !0 === o ? i(e).prependTo(s $ slideTrack) : i(e).appendTo(s.$ slideTrack), s $ slides = s $ slideTrack.children(this.options.slide), s $ slideTrack.children(this.options.slide).detach(), s $ slideTrack.append(s.$ slides), s $ slides.each(função(e, t) { i(t) .attr("dados-slick-index", e) }), s $ slidesCache = s $ slides, s.reinit(), e.prototype.animateHeight = function () { var i = isto; if (1 === i.options.slidesToShow && !0 === i.options.adaptiveHeight && !1 === i.options.vertical) { var e = i.$ slides.eq (i.currentSlide).outerHeight(!0); i.$ list.animate({ altura: e }, Eu.options.speed) } }, e.prototype.animateSlide = function (e, t) { var = = { }, s = this; s.animateHeight(), 0 === s.options.rtl && !1 == = s.options.vertical && (e = -e), !1 === s.transformsEnabled ? !1 === s.options.vertical ? s $ slideTrack.animate({ left: e }, s.options.speed, s.options.easing, t): $ slideTrack.animate({ top: e }, s.options.speed, s.options.easing, t): !1 === s.cssTransitions ? 0 === s.options.rtl && (s.currentLeft = -s.currentLeft), i({ animStart: s.currentLeft }).Animar({ animStart: e }, { duração: s.options.speed, easing: s.options.easing, step: function (i) { i = Math.ceil(i), 1 == s.options.vertical(o[s.animType] = "translate (" + i + "px, 0px) ", s $ slideTrack.css(o)) : (o[s.animType] = " traduzir (0 px, " + i + " px) ", s $ slideTrack.css(o)) }, completo: function () { t && t.call() } })) : (s.applyTransition(), e = Math.ceil(e), !1 === s.options.vertical ? o[s.animType] = "translate3d (" + e + "px, 0 px, 0 px)" : o[s.animType] = "traduzir3d (0 px," + e + "px, 0 px)", s $ slideTrack.css(o), t && setTimeout(função() { s.disableTransition(), t.call() }, s.options.speed))}, e.prototype.getNavTarget = function () { var e = isto, t = e.options.asNavFor return t && null! == t && (t = i(t).not(e.$ slider)), t }, e.prototype.asNavFor = função(e) { var t = this.getNavTarget(); null! = t && "objeto" == typeof t && t.each(function () { var t = i(this).slick("getSlick"); t.unslicked || t.slideHandler(e, !0) }) }, e.prototype.applyTransition = function (i) { var e = isto, t = {}; !1 === e.options.fade ? t[e.transitionType] = e.transformType + "" + e.options.speed + " ms " + e.options.cssEase : t[e.transitionType] = " opacidade " + e.options.speed + " ms " + e.options.cssEase, !1 === e.options.$ slideTrack.css(t): e.$ slides.eq(i).css(t) }, e.prototype.autoPlay = function () { var i = isso; i.autoPlayClear(), i.slideCount > i.options.slidesToShow && (i.autoPlayTimer = setInterval(i.autoPlayIterator, i.options.autoplaySpeed)) }, e.prototype.autoPlayClear = function () { var i = isto; i.autoPlayTimer && clearInterval(i.autoPlayTimer) }, e.prototype.autoPlayIterator = function () { var i = isto, e = i.currentSlide + i.options.slidesToScroll; i.paused || i.interrupted || i.focussed || (!1 == = i.options.infinite && (1 === i.direction && i.currentSlide + 1 === i.slideCount - 1 ? i.direction = 0 : 0 === i.direction && (e = i.currentSlide - i.options.slidesToScroll, i.currentSlide - 1 == 0 && (i.direction = 1))), i.slideHandler(e)) }, e.prototype.buildArrows = function () { var e = isto; !0 === e.options.arrows && (e.$ prevArrow = i(e.options.prevArrow).addClass("slick-arrow"), e.$ nextArrow = i(e.options.nextArrow).addClass("slick-arrow"), e.slideCount > e.options.slidesToShow ? (e.$ prevArrow.removeClass("slick-hidden").removeAttr("aria-hidden tabindex"), e $ nextArrow.removeClass("slick-hidden").removeAttr("aria-ocultos tabindex"), e.htmlExpr.test(e.options.prevArrow) && e.$ prevArrow.prependTo(e.options.appendArrows), e.htmlExpr.test(e.options.nextArrow) && e $ nextArrow.appendTo(e.options.appendArrows), !0! == e.options.infinite && e.$ prevArrow.addClass("slick-disabled").attr("aria-disabled", "true")): e.$ prevArrow.add(e.$ nextArrow).addClass("slick-hidden").attr({ "aria-disabled ": " true ", tabindex: " - 1 " })) }, e.prototype.buildDots = function () { var e, t, o = isto; if (!0 === o.options.dots) { para(o.$ slider.addClass("slick-dotted"), t = i("<ul />").addClass(o.options.dotsClass), e = 0; e <= o.getDotCount(); e += 1) t.append(i("<li />").append(o.options.customPaging.call(this, o, e))); o.$dots = t.appendTo(o.options.appendDots), o.$dots.find("li").first().addClass("ativo-slick") } }, e.prototype.buildOut = function () { var e = isso; e.$ slides = e.$ slider.children(e.options.slide + ": não (.slick-cloned)").addClass("slick-slide"), e.slideCount = e $ slides.length, e $ slides.each(função(e, t) { i(t) .attr("data-slick-index", e).data("originalStyling", i(t).attr("estilo") || "") }), e.$ slider.addClass("slick-slider"), e.$ slideTrack = 0 === e.slideCount ? i('<div class = "slick-track" />').appendTo(e.$ slider) : e. .wrapAll('<div class = "slick-track "/> ').parent(), e $ list = e $ slideTrack.wrap(' <div class =" lista-slick "/> ').parent(), e.$ slideTrack.css("opacidade", 0), 0! == e.options.centerMode && !0! == e.options.swipeToSlide || (e.options.slidesToScroll = 1), i("img [data-preguiçoso]", slider $).not("[src]").addClass("slick-loading"), e.setupInfinite(), e.buildArrows(), e.buildDots(), e.updateDots(), e.setSlideClasses("number" == typeof e.currentSlide ? e.currentSlide : 0), !0 === e.options.draggable && e.$ list.addClass("arrastável") }, e.prototype.buildRows = function () { var i, e, t, o, s, n, r, l = isto; se; o(document.createDocumentFragment(), n = l.$ slider.children(), l.options.rows > 1) { para(r = l.options.slidesPerRow * l.options.rows, s = Math.ceil(n.length / r), i = 0; i < s; i++) { var d = document.createElement("div "); para(e = 0; e < l.options.rows; e++) { var a = document.createElement("div"); para(t = 0; t < l.options.slidesPerRow; t++) { var c = i * r + (e * l.options.slidesPerRow + t); n.get(c) && a.appendChild(n.get(c)) } d.appendChild(a) } o.appendChild(d) } l.$ slider.empty().endend(o), l.$ slider.children().children().children().css({ largura: 100 / l.options.slidesPerRow + "%", exibição: "inline-block" }) } }, e.prototype.checkResponsive = function (e, t) { var o, s, n, r = isto, l = !1, d = r.$ slider.width (), a = window.innerWidth || i(janela).width(); if ("window" === r.respondTo ? n = a : "slider" === r.respondTo ? n = d : "min" === r.respondTo && (n = Math.min(a, d)), r.options.responsive && r.options.responsive.length && null! == r.options.responsive) { s = null; para(o em r.breakpoints) r.breakpoints.hasOwnProperty(o) && (!1 === r.originalSettings.mobileFirst ? n < r.Pontos de interrupção[o] && (s = r.breakpoints[o]): n > r.ponto de pontos[o] && (s = r.breakpoints[o])); null! == s ? null! == r.activeBreakpoint ? (s! == r.activeBreakpoint || t) && (r.activeBreakpoint = s, "anular" === r.breakpointSettings[s] r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), 0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s) : (r.activeBreakpoint = s, "unslick" === r.breakpointSettings[s] r.unslick(s) : (r.options = i.extend({}, r.originalSettings, r.breakpointSettings[s]), 0 = == e && (r.currentSlide = r.options.initialSlide), r.refresh(e)), l = s): null! == r.activeBreakpoint && (r.activeBreakpoint = null, r.options = r.originalSettings, !0 === e && (r.currentSlide = r.options.initialSlide), r.refresh(e), l = s), e || !1 === l || r.$ Slider.trigger("ponto de interrupção ", [r, l]) } }, e.prototype.changeSlide = função(e, t) { var o, s, n, r = isto, l = i(e.currentTarget); comutador(l.is("a") && e.preventDefault(), l.is(" li ") || (l = l.closest(" li ")), n = r.slideCount % r.options.slidesToScroll! = 0, o = n ? 0 : (r.slideCount - r.currentSlide) % r.options.slidesToScroll, e.data.message) { caso "anterior": s = 0 === o ? r.options.slidesToScroll : r.options.slidesToShow - o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide - s, !1, t); break; caso "next": s = 0 === o ? r.options.slidesToScroll : o, r.slideCount > r.options.slidesToShow && r.slideHandler(r.currentSlide + s, !1, t); quebra; caso "índice": var d = 0 === e.data.index ? 0 : e.data.index || l.index() * r.options.slidesToScroll; r.slideHandler(r.checkNavigable(d), 1, t), l.children().trigger("focus"); break; padrão: return } }, e.prototype.checkNavigable = function (i) { var e, t; if (e = this.getNavigableIndexes(), t = 0, i > e[e.length - 1]) i = e[e.length - 1]; else para(var o em e) { if (i < e[o]) { i = t; quebra } t = e[o] } i, e.prototype.cleanUpEvents = function () { var e = isto; e.options.dots && null! == e.$ dots && (i("li", e.$ dots).off("click.slick", e.changeSlide).off("mouseenter.slick", i.proxy(e.interrom, e, !0)).off("mouseleave.slick", i.proxy(e.interrupt, e, !1)), 0 === e.options.accessibility && e.$ dots.off("keydown.slick", e.keyHandler)) , $ slider.off("focus.slick blur.slick"), 0 === e.options.arrows && e.slideCount > e.options.slidesToShow && (e.$ prevArrow && e.$ prevArrow.off("clique. slick ", e.changeSlide), e.$ nextArrow && e $ nextArrow.off(" click.slick ", e.changeSlide), 0 === e.options.accessibility && (e.$ prevArrow && e $ prevArrow.off("keydown.slick", e.keyHandler), e.$ nextArrow && e $ nextArrow.off("keydown.slick", e.keyHandler))), e.$ list.off("touchstart".slick mousedown.slick ", e.swipeHandler), e $ list.off (" touchmove.slick mousemove.slick ", e.swipeHandler), e. $ list.off (" touchend.slick mouseup.slick ", e .swipeHandler), $ list.off ("touchcancel.slick mouseleave.slick", e.swipeHandler), e. $ list.off ("click.slick", e.clickHandler), i (documento) .off ( e.visibilityChange, e.visibility), e.cleanUpSlideEvents (), 0 === e.options.accessibility && e $ list.off ("keydown.slick", e.keyHandler), 0 === e.options .focusOnSelect && i (e. $ slideTrack) .children (). off ("click.slick", e.selectHandler), i (janela) .off ("orientationchange.slick.slick - " + e.instanceUid, e.orientationChange) , eu (janela).off ("resize.slick.slick - " + e.instanceUid, e.resize), i ("[arrastável! = verdadeiro]", e. $ slideTrack) .off ("dragstart", e.preventDefault), i ( window) .off ("load.slick.slick - " + e.instanceUid, e.setPosition)}, e.prototype.cleanUpSlideEvents = function () {var e = isto; e. $ list.off ("mouseenter.slick ", i.proxy (e.interrupt, e,! 0)), e $ list.off (" mouseleave.slick ", i.proxy (e.interrupt, e,! 1))}, e.prototype. cleanUpRows = function () {var i, e = this; e.options.rows> 1 && ((i = e. $ slides.children (). children ()). removeAttr ("estilo"), e. $ slider. empty (). append (i))}, e.prototype.clickHandler = função (i) {! 1 === this.shouldClick && (i.stopImmediatePropagation (), i.stopPropagation (), i.preventDefault ())} , e.prototype.destroy = function (e) {var t = isso; t.autoPlayClear (), t.touchObject = {}, t.cleanUpEvents (), i (".slick - cloned", t.$ slider) .detach (), t. $ dots && t. $ dots.remove (), t $ prevArrow && t. $ prevArrow.length && (t. $ prevArrow.removeClass ("slick - disabled slick - arrow bem escondido"). removeAttr ("tablea aria - disabled aria - disabled"). css ("display", ""), t.htmlExpr.test (t.options.prevArrow) && t. $ prevArrow.remove ()), t. $ nextArrow && t. $ nextArrow.length && (t. $ nextArrow.removeClass ("slick - disabled slick - arrow slick - oculto"). removeAttr ("aria - tabia aria - disabled oculto"). css ("display", ""), t. htmlExpr.test (t.options.nextArrow) && t. $ nextArrow.remove ()), t $ slides && (t. $ slides.removeClass ("slick - slide slick - active slick - center slick - visível slick - current") .removeAttr ("aria - hidden"). removeAttr ("data - slick - index").each (function () {i (this) .attr ("estilo", i (this) .data ("originalStyling"))}), t. $ slideTrack.children (this.options.slide) .detach (), $ slideTrack.detach (), t $ list.detach (), $ slider.append (t. $ slides)), t.cleanUpRows (), t. $ slider.removeClass ("slick - slider" ), t. $ slider.removeClass ("slick - initialized"), t. $ slider.removeClass ("slick - dotted"), t.unslicked =! 0, e || t. $ slider.trigger ("destruir" , [t])}, e.prototype.disableTransition = function (i) {var e = isto, t = {}; t [e.transitionType] = "" ,! 1 === e.options.fade? e $ slideTrack.css (t): e. $ slides.eq (i) .css (t)}, e.prototype.fadeSlide = função (i, e) {var t = isto;! 1 === t. cssTransitions? (t. $ slides.eq (i) .css ({zIndex: t.options.zIndex}), t. $ slides.eq (i) .animate ({opacidade: 1}, t.options.speed, t.options.easing, e)): (t.applyTransition (i), t. $ slides.eq (i) .css ({opacidade: 1, zIndex: t.options.zIndex}), e && setTimeout (function () {t.disableTransition (i), e.call ()}, t.options.speed))}, e.prototype.fadeSlideOut = função (i) {var e = isto;! 1 === e.cssTransitions? E. $ Slides.eq (i) .animate ({opacidade: 0, zIndex: e.options.zIndex-2}, e.options.speed, e.options.easing) :( e.applyTransition (i), e $ slides.eq (i) .css ({opacidade: 0, zIndex: e.options.zIndex-2}))), e.prototype.filterSlides = e.prototype.slickFilter = function (i) {var e = isto; null! == i && (e. $ slidesCache = e. $ slides, e.unload (), e. $ slideTrack.children (this.options.slide) .detach (), e $ slidesCache.filter (i) .appendTo (e. $ slideTrack), e.reinit ())}, e.prototype.focusHandler = function () {var e = isto; e. $ slider.off ("foco.slick blur.slick "). on (" focus.slick blur.slick "," * ", função (t) {t.stopImmediatePropagation (); var o = i (isto); setTimeout (function () {e. options.pauseOnFocus && (e.focussed = o.é (": focus"), e.autoPlay ())}, 0)}}}, e.prototype.getCurrent = e.prototype.slickCurrentSlide = function () {return this.currentSlide}, e.prototype.getDotCount = function () {var i = isso, e = 0, t = 0, o = 0; if (! 0 === i.options.infinite) if (i.slideCount <= i.options.slidesToShow) ++ o ; else para (; e <i.slideCount;) ++ o, e = t + i.options.slidesToScroll, t + = i.options.slidesToScroll <= i.options.slidesToShow? i.options.slidesToScroll: i.options .slidesToShow; else if (! 0 === i.options.centerMode) o = i.slideCount; else if (i.options.asNavFor) para (; e <i.slideCount;) ++ o, e = t + i.options.slidesToScroll, t + = i.options.slidesToScroll <= i.options.slidesToShow? i.options.slidesToScroll: i.options.slidesToShow; else o = 1 + Math.ceil ((i.slideCount-i.options .slidesToShow) /i.options.slidesToScroll); return o-1}, e.prototype.getLeft = função (i) {var e, t, o, s, n = isto, r = 0; retorno n.slideOffset = 0, t = n $ slides.first ().outerHeight (! 0),! 0 === n.options.infinite? (n.slideCount> n.options.slidesToShow && (n.slideOffset = n.slideWidth * n.options.slidesParaShow * -1, s = -1, ! 0 === n.options.vertical &&! 0 === n.options.centerMode && (2 === n.options.slidesToShow? S = -1,5: 1 === n.options.slidesToShow && (s = -2 )), r = t * n.options.slidesToShow * s), n.slideCount% n.options.slidesToScroll! = 0 && i + n.options.slidesToScroll> n.slideCount && n.slideCount> n.options.slidesToShow && (i> n .slideCount (n.slideOffset = (n.options.slidesToShow- (in.slideCount)) * n.slideWidth * -1, r = (n.options.slidesToShow- (in.slideCount)) * t * -1) : (n.slideOffset = n.slideCount% n.options.slidesToScroll * n.slideWidth * -1, r = n.slideCount% n.options.slidesToScroll * t * -1))): i + n.options.slidesToMostrar > n.slideCount && (n.slideOffset = (i + n.options.slidesToShow-n.slideCount) * n.slideWidth, r = (i + n.options.slidesToShow-n.slideCount) * t), n.slideCount <= n.options.slidesToShow && (n.slideOffset = 0, r = 0),! 0 === n.options.centerMode && n.slideCount <= n. options.slidesToShow? n.slideOffset = n.slideWidth * Math.floor (n.options.slidesToShow) /2-n.slideWidth*n.slideCount/2:!0 === n.options.centerMode &&! 0 === n.options.infinite? n.slideOffset + = n.slideWidth * Math.floor (n.options.slidesToShow / 2) -n.slideWidth:! 0 === n.options.centerMode && (n.slideOffset = 0, n. slideOffset + = n.slideWidth * Math.floor (n.options.slidesToShow / 2)), e =! 1 === n.options.vertical? i * n.slideWidth * -1 + n.slideOffset: i * t * -1 + r,! 0 === n.options.variableWidth && (o = n.slideCount <= n.options.slidesToShow ||! 1 === n.options.infinite? N. $ SlideTrack.children (".slick - slide "). eq (i): n. $ slideTrack.children (" slick - slide "). eq (i + n.options.slidesToShow), e =! 0 === n.options.rtl? o [0]? - 1 * (n. $ slideTrack.width () - o [0] .offsetLeft-o.width ()): 0: o [0]? - 1 * o [0] .offsetLeft : 0,! 0 === n.options.centerMode && (o = n.slideCount <= n.options.slidesToShow ||! 1 === n.options.infinite? N. $ SlideTrack.children (".Slick - slide "). eq (i): n. $ slideTrack.children (".slick - slide "). eq (eu + n.options.slidesToShow + 1), e =! 0 === n.options.rtl? o [0]? - 1 * (n. $ slideTrack.width () - o [0] .offsetLeft-o.width ()): 0: o [0]? - 1 * o [0] .offsetLeft: 0 , e + = (n. $ list.width () - o.outerWidth ()) / 2)), e}, e.prototype.getOption = e.prototype.slickGetOption = função (i) {return this.options [i ]}, e.prototype.getNavigableIndexes = function () {var i, e = isto, t = 0, o = 0, s = []; para (! 1 === e.options.infinite? i = e. slideCount: (t = -1 * e.options.slidesToScroll, o = -1 * e.options.slidesToScroll, i = 2 * e.slideCount); t <i;) s.push (t), t = o + e.options.slidesToScroll, o + = e.options.slidesToScroll <= e.options.slidesToShow? e.options.slidesToScroll: e.options.slidesToShow; return s}, e.prototype.getSlick = function () {retornar isto}, e.prototype.getSlideCount = function () {var e, t, o = isto; return t = ! 0 === o.options.centerMode? O.slideWidth * Math.floor (o.options.slidesToShow / 2): 0,! 0 === o.options.swipeToSlide? (O. $ SlideTrack.find (".slick - slide "). each (função (s, n) {if (n.offsetLeft-t + i (n) .outerWidth () / 2> -1 * o.swipeLeft) retorna e = n,! 1} ), Math.abs (i (e) .attr ("data - slick - index") - o.currentSlide) || 1): o.options.slidesToScroll}, e.prototype.goTo = e.prototype.slickGoTo = função (i, e) {this.changeSlide ({dados: {mensagem: "índice", índice: parseInt (i)}}, e)}, e.prototype.init = função (e) {var t = this; Eu (t. $ slider) .hasClass ("slick - inicializado") || (i (t. $ slider) .addClass ("slick - inicializado"), t.buildRows (), t.buildOut (), t. setProps (), t.startLoad (), t.loadSlider (), t.initializeEvents (), t.updateArrows (), t.updateDots (), t.checkResponsive (! 0), t.focusHandler ()), e & tt. $ slider.trigger ("init", [t]), 0 = == t.options.accessibility && t.initADA (), t.options.autoplay && (t.paused =! 1, t.autoPlay ())}, e.prototype.initADA = function () {var e = isto, t = Math.ceil (e.slideCount / e.options.slidesToShow), o = e.getNavigableIndexes (). Filter (função (i) {retorno i> = 0 && i <e.slideCount}); e. $ Slides.add (e $ slideTrack.find (".slick - cloned")). attr ({"aria - hidden": "verdadeiro", tabindex: " - 1"}). find ("a, entrada, botão, selecione"). attr ({tabindex: " - 1"}), null! == e. $ dots && (e. $ slides.not (e. $ slideTrack.find (".slick - cloned")). each (função (t) {var s = o.indexOf (t); i (this) .attr ({papel: "tabpanel", id: "slick - slide" + e.instanceUid + t, tabindex: -1}), - 1!== s && i (this) .attr ({"aria - describedby": "slick - slide - control" + e.instanceUid + s})}), e. $ dots.attr ("role", "tablist"). find ("li"). each (função (s) {var n = o [s]; i (this) .attr ({papel: "apresentação"}), i (this) .find ("button"). primeiro (). attr ({papel: "tab", id: "slick - slide - controle" + e.instanceUid + s, "aria - controls": "slick - slide" + e.instanceUid + n, "aria - label ": s + 1 +" de "+ t," selecionado por aria ": null, tabindex:" - 1 "})}). eq (e.currentSlide) .find (" button "). attr ({" aria - selected ":" true ", tabindex:" 0 "}). end ()); para (var s = e.currentSlide, n = s + e.options.slidesToShow; s <n; s ++) e. $ slides.eq (s) .attr ("tabindex", 0); e.activateADA ()}, e.prototype.initArrowEvents = função () {var i = this;! 0 === i.options.setas && i.slideCount> i.options.slidesToShow && (i. $ prevArrow.off ("click.slick"). on ("click.slick", {mensagem: "anterior"}, i.changeSlide), i. $ nextArrow. off ("click.slick"). on ("click.slick", {message: "próximo"}, i.changeSlide),! 0 === i.options.accessibility && (i. $ prevArrow.on ("keydown.slick ", i.keyHandler), i. $ nextArrow.on (" keydown.slick ", i.keyHandler)))}, e.prototype.initDotEvents = function () {var e = isto;! 0 === e.options.dots && (i ("li", e. $ dots) .on ("click.slick", {message: "index"}, e.changeSlide), 0 === e.options.accessibility && e. $ dots.on ("keydown.slick", e.keyHandler)), 0 === e.options.dots &&! 0 === e.options.pauseOnDotsHover && i ("li", e. $ dots) .on ( "mouseenter.slick", i.proxy (e.interrupt, e ,!0)). On ("mouseleave.slick", i.proxy (e.interrupt, e,! 1))}, e.prototype.initSlideEvents = function () {var e = isto; e.options.pauseOnHover && (e $ list.on ("mouseenter.slick", i.proxy (e.interrupt, e,! 0)), e $ list.on ("mouseleave.slick", i.proxy (e.interrupt, e, ! 1)))}, e.prototype.initializeEvents = function () {var e = isto; e.initArrowEvents (), e.initDotEvents (), e.initSlideEvents (), e. $ List.on ("touchstart.slick mousedown.slick ", {action:" start "}, e.swipeHandler), e $ list.on (" touchmove.slick mousemove.slick ", {action:" move "}, e.swipeHandler), e. $ list.on ("touchend.slick mouseup.slick", {action: "fim"}, e.swipeHandler), e $ list.on ("touchcancel.slick mouseleave.slick", {action: "end"} , e.swipeHandler), e $ list.on ("click.slick", e.clickHandler), i (documento) .on (e.visibleChange, i.proxy (e.visibility, e)) ,! 0 === e.options.accessibility && e. $ list.on ("keydown.slick", e.keyHandler),! 0 === e.options. focusOnSelect && i (e. $ slideTrack) .children (). on ("click.slick", e.selectHandler), i (janela) .on ("orientationchange.slick.slick - " + e.instanceUid, i.proxy (e .orientationChange, e)), i (janela) .on ("resize.slick.slick - " + e.instanceUid, i.proxy (e.resize, e)), i ("[arrastável! = verdadeiro]", e. $ slideTrack) .on ("dragstart", e.preventDefault), i (janela) .on ("load.slick.slick - " + e.instanceUid, e.setPosition), i (e.setPosition)}, e.prototype.initUI = function () {var i = isto;! 0 === i.options.arrows && i.slideCount> i.options.slidesToShow && (i. $ prevArrow.show (), i. $ nextArrow.show ( )) ,! 0 === i.options.dots && i.slideCount> i.options.slidesToShow && i. $ Dots.show ()}, e.prototype.keyHandler = função (i) {var e = isto; i.target.tagName.match ("TEXTAREA | INPUT | SELECT") || (37 === i.keyCode &&! 0 === e.options.accessibility ? e.changeSlide ({dados: {mensagem:! 0 === e.options.rtl? "próximo": "anterior"}}): 39 === i.keyCode &&! 0 === e.options.accessibility && e .changeSlide ({dados: {mensagem:! 0 === e.options.rtl? "anterior": "próximo"}}))}, e.prototype.lazyLoad = function () {função e (e) {i ("img[data - preguiçoso]", e) .each (function () {var e = i (isto), t = i (isto) .attr ("data - preguiçoso"), o = i (isto). attr ("data - srcset"), s = i (this) .attr ("tamanho dos dados") || n. $ slider.attr ("tamanho dos dados"), r = document.createElement ("img") r.onload = function () {e.animate ({opacidade: 0}, 100, function () {o && (e.attr ("srcset", o), s && e.attr ("tamanhos", s)), e.attr ("src ", t) .animate ({opacidade: 1}, 200, function () {e.removeAttr (" data - data - dados - srcset ") removeClass (" slick - loading ")}), n. $ slider.trigger ("lazyLoaded", [n, e, t])})}, r.onerror = function () {e.removeAttr ("data - preguiçoso"). removeClass ("slick - loading"). addClass ("slick - lazyload - error"), n. $ slider.trigger ("lazyLoadError", [n, e, t])}, r.src = t})} var t, o, s, n = isto; if (! 0 === n.options.centerMode?! 0 === n.options.infinite? s = (o = n.currentSlide + (n.options.slidesToShow / 2 + 1)) + n.options.slidesPara mostrar +2: (o = Math.max (0, n.currentSlide- (n.options.slidesToShow / 2 + 1)), s = n.options.slidesToShow / 2 + 1 + 2 + n.currentSlide) :( o = n.options.infinite? n.options.slidesToShow + n.currentSlide: n.currentSlide, s = Math.ceil (o + n.options.slidesToShow), 0 === n.options.fade && (o> 0 && -, s <= n.slideCount && s ++)), t = n.$ slider.find (".slick - slide"). slice (o, s), "antecipado" === n.options.lazyLoad) para (var r = o-1, l = s, d = n. $ slider.find (".slick - slide"), a = 0; a <n.options.slidesToScroll; a ++) r <0 && (r = n.slideCount-1), t = (t = t.add (d. eq (r))). add (d.eq (l)), r -, l ++; e (t), n.slideCount <= n.options.slidesToShow? e (n. $ slider.find (".slick - slide ")): n.currentSlide> = n.slideCount-n.options.slidesToShow? e (n. $ slider.find (".slick - cloned "). slice (0, n.options.slidesToShow)) : 0 == n.currentSlide && e (n. $ Slider.find (".Slick - cloned"). Slice (-1 * n.options.slidesToShow))}, e.prototype.loadSlider = function () {var i = this; i.setPosition (), i $ slideTrack.css ({opacidade: 1}), i. $ slider.removeClass ("slick - loading"), i.initUI (), "progressivo" === i .options.lazyLoad && i.progressiveLazyLoad ()}, e.prototype.next = e.prototype.slickNext = function () {this.changeSlide ({dados: {mensagem: "próximo"}})}, e.prototype.orientationChange = function () {var i = isto; i.checkResponsive (), i.setPosition () }, e.prototype.pause = e.prototype.slickPause = function () {var i = isto; i.autoPlayClear (), i.paused =! 0}, e.prototype.play = e.prototype.slickPlay = function () {var i = isto; i.autoPlay (), i.options.autoplay =! 0, i.paused =! 1, i.focussed =! 1, i.interrompido =! 1}, e.prototype.postSlide = function (e) {var t = isto; t.unslicked || (t. $ slider.trigger ("afterChange", [t, e]), t.animating =! 1, t.slideCount> t.options. slidesToShow && t.setPosition (), t.swipeLeft = null, t.options.autoplay && t.autoPlay () ,! 0 === t.options.accessibility && (t.initADA (), t.options.focusOnChange && i (t. $ slides. get (t.currentSlide)). attr ("tabindex", 0) .focus ()))}, e.prototype.prev = e.prototype.slickPrev = function () {isto.changeSlide ({dados: {mensagem: "anterior"}})}, e.prototype.preventDefault = função (i) {i.preventDefault ()}, e.prototype.progressiveLazyLoad = função (e) {e = e || 1; var t, o, s, n, r, l = isto, d = i ("img[data - lento]", l. $ Slider); d.length? (T = d.first (), o = t.attr ("data - lazy"), s = t.attr ("data - srcset"), n = t.attr ("tamanho dos dados") || l. $ slider.attr ("data - sizes "), (r = document.createElement (" img ")). onload = function () {s && (t.attr (" srcset ", s), n && t.attr (" tamanhos ", n)), t.attr ("src", o) .removeAttr ("data - lazy data - srcset data - sizes"). removeClass ("slick - loading"), 0 === l.options.adaptiveHeight && l.setPosition (), l. slider.trigger ("lazyLoaded", [l, t, o]), l.progressiveLazyLoad ()}, r.onerror = função () {e <3? setTimeout (função () {l.progressiveLazyLoad (e + 1) }500) :( t.removeAttr ("data - preguiçoso"). RemoveClass ("slick - loading"). AddClass ("slick - lazyload - error"), l. $ Slider.trigger ("lazyLoadError", [l, t , o]), l.progressiveLazyLoad ())}, r.src = o): l $ slider.trigger ("allImagesLoaded", [l])}, e.prototype.refresh = função (e) {var , o, s = this; o = s.slideCount-s.options.slidesToShow,! s.options.infinite && s.currentSlide> o && (s.currentSlide = o), s.slideCount <= s.options.slidesToShow && (s. currentSlide = 0), t = s.currentSlide, s.destroy (! 0), i.extend (s, s.inicials, {currentSlide: t}), s.init (), e || s.changeSlide ({ data: {message: "index", index: t}},! 1)}, e.prototype.registerBreakpoints = function () {var e, t, o, s = isto, n = s.options.responsive || null; if ("array" === i.type (n) && n.length) {s.respondTo = s.options.respondTo || "janela"; para (e in n) if (o = s.breakpoints.length-1, n.hasOwnProperty (e)) {para (t = n [e] .breakpoint; o> = 0;) s.breakpoints [o] && s.breakpoints [o] === t && s.breakpoints. splice (o, 1), o -; s.breakpoints.push (t), s.breakpointSettings [t] = n [e] .settings} s.breakpoints.sort (função (i, e) {return s. options.mobileFirst? ie: ei})}}, e.prototype.reinit = function () {var e = isto; e. $ slides = e. $ slideTrack.children (e.options.slide) .addClass ("liso - slide "), e.slideCount = e. $ slides.length, e.currentSlide> = e.slideCount && 0! == e.currentSlide && (e.currentSlide = e.currentSlide-e.options.slidesToScroll), e.slideCount < = e.options.slidesToShow && (e.currentSlide = 0), e.registerBreakpoints (), e.setProps (), e.setupInfinite (), e.buildArrows (), e.updateArrows (), e.initArrowEvents (), e.buildDots (), e.updateDots (), e.initDotEvents (), e.cleanUpSlideEvents (), e.initSlideEvents (), e.checkResponsive (!1,! 0), 0 === e.options.focusOnSelect && i (e. $ SlideTrack) .children (). On ("click.slick", e.selectHandler), e.setSlideClasses ("número" == tipo de e.currentSlide? e.currentSlide: 0), e.setPosition (), e.focusHandler (), e.paused =! e.options.autoplay, e.autoPlay (), e. $ slider.trigger ("reInitir" , [e])}, e.prototype.resize = function () {var e = isto; i (janela) .width ()! == e.windowWidth && (clearTimeout (e.windowDelay), e.windowDelay = window. setTimeout (function () {e.windowWidth = i (janela) .width (), e.checkResponsive (), e.unslicked || e.setPosition ()}, 50))}, e.prototype.removeSlide = e. prototype.slickRemove = function (i, e, t) {var o = this; if (i = "booleano" == tipoof i?! 0 === (e = i)? 0: o.slideCount-1:! 0 === e? - i: i, o.slideCount <1 || i <0 || i> o.slideCount-1) retorno! 1; o.unload (), 0 === t? O $ slideTrack.children () remove (): o $ slideTrack.children (this.options.slide).eq (i) .remove (), o $ slides = o $ slideTrack.children (this.options.slide), o $ slideTrack.children (this.options.slide) .detach (), o. $ slideTrack .append (o. $ slides), o. $ slidesCache = o. $ slides, o.reinit ()}, e.prototype.setCSS = função (i) {var e, t, o = isso, s = {} ;! 0 === o.options.rtl && (i = -i), e = "esquerda" == o.positionProp? Math.ceil (i) + "px": "0px", t = "topo" = = o.positionProp? Math.ceil (i) + "px": "0px", s [o.positionProp] = i,! 1 === o.transformsEnabled? o $ slideTrack.css (s) :( s = {} ,! 1 === o.cssTransitions? (S [o.animType] = "traduzir(" + e + ", " + t + ")", o. $ SlideTrack.css (s)) :( s [ o.animType] = "translate3d(" + e + ", " + t + ", 0px)", o. $ slideTrack.css (s)))}, e.prototype.setDimensions = function () {var i = isto; ! 1 === i.options.vertical?! 0 === i.options.centerMode && i. $ List.css ({preenchimento: "0px "+ i.options.centerPadding}) :( i. $ List.height (i. $ Slides.first (). OuterHeight (! 0) * i.options.slidesToShow), 0 === i.options. centerMode && i. $ list.css ({preenchimento: i.options.centerPadding + "0px"})), i.listWidth = i. $ list.width (), i.listHeight = i. $ list.height (), 1 === i.options.vertical &&! 1 === i.options.variableWidth? (i.slideWidth = Math.ceil (i.listWidth / i.options.slidesToShow), i. $ slideTrack.width (Math.ceil ( i.slideWidth * i. $ slideTrack.children (".slick - slide"). comprimento))) :! 0 === i.options.variableWidth? i. $ slideTrack.width (5e3 * i.slideCount) :( i.slideWidth = Math.ceil (i.listWidth), i $ slideTrack.height (Math.ceil (i. $ slides.first (). outerHeight (! 0) * i. $ slideTrack.children (".slick - slide "). length))); var e = i. $ slides.first (). outerWidth (! 0) -i. $ slides.first (). width () ;! 1 === i.options.variableWidth && i $ slideTrack.children (".slick - slide "). largura (i.slideWidth-e)}, e.prototype.setFade = função () {var e, t = isso; t $ slides.each (função (o, s) {e = t .slideWidth * o * -1,! 0 === t.options.rtl? i (s) .css ({posição: "relativo", direita: e, topo: 0, zIndex: t.options.zIndex-2 , opacidade: 0}): i (s) .css ({posição: "relativa", esquerda: e, topo: 0, zIndex: t.options.zIndex-2, opacidade: 0})}), t. slides.eq (t.currentSlide) .css ({zIndex: t.options.zIndex-1, opacidade: 1})}, e.prototype.setHeight = function () {var i = isto; if (1 === i.options.slidesToShow &&! 0 === i.options.adaptiveHeight &&! 1 === i.options.vertical) {var e = i. $ slides.eq (i.currentSlide) .outerHeight (! 0); i. $ list.css ("altura", e)}}, e.prototype.setOption = e.prototype.slickSetOption = function () {var e, t, o, s, n, r = isto, l =! 1; if ("objeto" === i.type (argumentos [0])? (o = argumentos [0], l = argumentos [1], n = "múltiplo"): "string" === i.type (arguments [0]) && (o = argumentos [0], s = argumentos [1], l = argumentos [2], "responsivo" === argumentos [0] && "array" === i.type (argumentos [1])? n = "responsivo": void 0! == argumentos [1] && (n = "single")), "single" === n) r.options [o] = s; else if ("múltiplo" === n) i.each (o, função (i, e) {r.opções [i] = e}); else if ("responsivo" === n) para (t in s ) if ("array"! == i.type (r.options.responsive)) r.options.responsive = [s [t]]; else {para (e = r.options.responsive.length-1; e > = 0;) r.options.responsive [e] .breakpoint === s [t] .breakpoint && r.options.responsive.splice (e, 1), e -; r.options.responsive.push (s [ t])} l && (r.unload (), r.reinit ())}, e.prototype.setPosition = function () {var i = isto; i.setDimensions (), i.setHeight (), 1 = == i.options.fade? i.setCSS (i.getLeft (i.currentSlide)): i.setFade (), i. $ slider.trigger ("setPosition", [i])}, e.prototype.setProps = função () {var i = isso, e = document.body.style; i.positionProp =! 0 === i.options.vertical? "top": "left", "top" === i.positionProp? i. $ slider.addClass ("vertical - slick"): i. $ slider.removeClass ("slick - vertical"), void 0 == = e.WebkitTransition && void 0 === e.MozTransition && void 0 === e.msTransition ||! 0 === i.options.useCSS && (i.cssTransitions =! 0), i.options.fade && ("número" == typeof i.options.zIndex? i.options.zIndex <3 && (i.options.zIndex = 3): i.options.zIndex = i.defaults.zIndex), void 0! == e.OTransform && (i.animType = "OTransform", i.transformType = " - o - transform", i.transitionType = "OTransition", void 0 === e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType =! 1)),void 0! == e.MozTransform && (i.animType = "MozTransform", i.transformType = " - moz - transform", i.transitionType = "MozTransition", void 0 === e.perspectiveProperty && void 0 === e. MozPerspective && (i.animType =! 1)), void 0! == e.webkitTransform && (i.animType = "webkitTransform", i.transformType = " - webkit - transformar", i.transitionType = "webkitTransition", void 0 = == e.perspectiveProperty && void 0 === e.webkitPerspective && (i.animType =! 1)), void 0! == e.msTransform && (i.animType = "msTransform", i.transformType = " - ms - transform", i.transitionType = "msTransition", void 0 === e.msTransform && (i.animType =! 1)), void 0! == e.transform &&! 1! == i.animType && (i.animType = "transformar" , i.transformType = "transformar", i.transitionType = "transition"), i.transformsEnabled = i.options.useTransform && null! == i.animType &&! 1! == i.animType}, e.prototype.setSlideClasses = função (i) {var e, t, o, s, n = isso; if (t = n. $ slider.find (".slick - slide"). removeClass ("slick - slick - center slick - current"). attr ("aria - oculto", "true "), n. $ slides.eq (i) .addClass (" slick - current "), 0 === n.options.centerMode) {var r = n.options.slidesToShow% 2 == 0? 1: 0; e = Math.floor (n.options.slidesToShow / 2) ,! 0 === n.options.infinite && (i> = e && i <= n.slideCount-1-e? N. $ Slides.slice (i -e + r, i + e + 1) .addClass ("ativo - slick"). attr ("aria - oculto", "falso") :( o = n.options.slidesToShow + i, t.slice (o -e + 1 + r, o + e + 2) .addClass ("ativo - liso"). attr ("aria - oculto", "falso")), 0 === i? t.eq (t.length -1 n.options.slidesToShow) .addClass ("slick - center"): i === n.slideCount-1 && t.eq (n.options.slidesToShow) .addClass ("slick - center")), n $ slides.eq ( i) .addClass ("slick - center")} else i> = 0 && i <= n.slideCount-n.options.slidesToShow? n. $ slides.slice (i, i + n.options.slidesToShow) .addClass (" slick - active "). attr (" aria - oculto "," falso "): t.length <= n.options.slidesToShow? t.addClass (" slick - active "). attr (" aria - hidden "," false "): (s = n.slideCount% n.options.slidesToShow, o =! 0 === n.options.infinite? n.options.slidesToShow + i: i, n.options.slidesToShow == n.options .slidesToScroll && n.slideCount-i <n.options.slidesToShow? t.slice (o- (n.options.slidesToShow-s), o + s) .addClass ("ativo - slick"). attr ("aria - hidden" , "false"): t.slice (o, o + n.options.slidesToShow) .addClass ("slick - active"). attr ("aria - oculto", "false")); "ondemand"! == n.options.lazyLoad && "antecipado"! == n.options.lazyLoad || n.lazyLoad ()}, e.prototype.setupInfinite = function () {var e, t, o, s = isto; if (! 0 === s.options.fade && (s.options.centerMode =! 1) ,! 0 === s.options.infinite &&! 1 === s.options.fade && (t = null, s.slideCount> s.options.slidesToShow)) {para (o =! 0 === s.options .centerMode? s.options.slidesToShow + 1: s.options.slidesToShow, e = s.slideCount; e> s.slideCount-o; e- = 1) t = e-1, i (s. $ slides [t clone (! 0) .attr ("id", ""). attr ("dados - slick - index", ts.slideCount) .prependTo (s. $ slideTrack) .addClass ("slick - cloned") ; para (e = 0; e <o + s.slideCount; e + = 1) t = e, i (s. $ slides [t]). clone (! 0) .attr ("id", ""). attr ("data - slick - index",t + s.slideCount) .appendTo (s. $ slideTrack) .addClass ("slick - cloned"); s. $ slideTrack.find (".slick - cloned"). find ("[id]"). function () {i (this) .attr ("id", "")})}}, e.prototype.interrupt = function (i) {var e = isto; i || e.autoPlay (), e. interrompido = i}, e.prototype.selectHandler = função (e) {var t = isso, o = i (e.target) .is (".slick - slide")? i (e.target): i (e .target) .parents (".slick - slide"), s = parseInt (o.attr ("dados - slick - index")); s || (s = 0), t.slideCount <= t.options. slidesToShow? t.slideHandler (s,! 1,! 0): t.slideHandler (s)}, e.prototype.slideHandler = função (i, e, t) {var o, s, n, r, l, d = null, a = this; if (e = e ||! 1,! (! 0 === a.animating &&! 0 === a.options.waitForAnimate ||! 0 === a.options.fade && a. currentSlide === i)) if (! 1 === e&& a.asNavFor (i), o = i, d = a.getLeft (o), r = a.getLeft (a.currentSlide), a.currentLeft = null === a.swipeLeft? r: a.swipeLeft,! 1 === a.options.infinite &&! 1 === a.options.centerMode && (i <0 || i> a.getDotCount () * a.options.slidesToScroll))! 1 === a.options.fade && (o = a.currentSlide,! 0! == t? a.animateSlide (r, função () {a.postSlide (o)}): a.postSlide (o)); else if (! 1 === a.options.infinite &&! 0 === a.options.centerMode && (i <0 || i> a.slideCount-a.options.slidesToScroll)) ! 1 === a.options.fade && (o = a.currentSlide,! 0! == t? A.animateSlide (r, função () {a.postSlide (o)}): a.postSlide (o)) ; else {if (a.options.autoplay && clearInterval (a.autoPlayTimer), s = o <0 a.slideCount% a.options.slidesToScroll! = 0? a.slideCount-a.slideCount% a.options.slidesToScroll: a .slideCount + o: o> = a.slideCount? a.slideCount% a.options.slidesToScroll! = 0? 0: oa.slideCount: o, a.animating =! 0, a. $ slider.trigger ("antesAlterar" [a, a.currentSlide, s]), n = a.currentSlide, a.currentSlide = s, a.setSlideClasses (a.currentSlide), a.options.asNavFor && (l = (l = a.getNavTarget ()). slick ("getSlick" )). slideCount <= l.options.slidesToShow && l.setSlideClasses (a.currentSlide), a.updateDots (), a.updateArrows (), 0 === a.options.fade) retornar! 0! == t? (a.fadeSlideOut (n), a.fadeSlide (s, função () {a.postSlide (s)})): a.postSlide (s), void a.animateHeight (); 0! == t? a .animateSlide (d, função () {a.postSlide (s)}): a.postSlide (s)}}, e.prototype.startLoad = function () {var i = isso;! 0 === i.options .arrows && i.slideCount> i.options.slidesToShow && (i. $ prevArrow.hide (), i. $ nextArrow.hide ()), 0 === i.options.dots && i.slideCount> i.options.slidesToShow && i. $ dots.hide (), i. $ slider.addClass ("carregamento - liso")}, e.prototype.swipeDirection = function () {var i, e, t, o, s = isto; retorna i = s.touchObject.startX-s.touchObject.curX, e = s.touchObject.startY-s.touchObject.curY, t = Math.atan2 (e, i), (o = Math.round (180 * t / Math.PI) ) <0 && (o = 360-Math.abs (o)), o <= 45 && o> = 0?! 1 === s.options.rtl? "Left": "right": o <= 360 && o> = 315 1 === s.options.rtl? "Left": "right": o> = 135 && o <= 225?! 1 === s.options.rtl? "Direita": "esquerda":! 0 = == s.options.verticalSwiping? o> = 35 && o <= 135 "down": "up": "vertical"}, e.prototype.swipeEnd = function (i) {var e, t, o = isto; se (o.dragging =! 1, o.swiping =! 1, o.scrolling) return o.scrolling =! 1,! 1; if (o.interrompido =! 1, o.shouldClick =! (o.touchObject.swipeComprimento > 10), void 0 === o.touchObject.curX) return! 1; if (! 0 === o.touchObject.edgeHit && o. $ Slider.trigger ("borda", [o, o.swipeDirection ()] ), o.touchObject.swipeLength> = o.touchObject.minSwipe) {switch (t = o.swipeDirection ()) {caso "left": caso "down": e = o.options.swipeToSlide? o.checkNavigable (o.currentSlide + o.getSlideCount ()): o.currentSlide + o.getSlideCount (), o.currentDirection = 0; quebra; caso "certo": caso "up": e = o.options.swipeToSlide? o.checkNavigable (o.currentSlide-o. getSlideCount ()): o.currentSlide-o.getSlideCount (), o.currentDirection = 1} "vertical"! = t && (o.slideHandler (e), o.touchObject = {}, o. $ slider.trigger (" deslize ", [o, t])}} mais o.touchObject.startX! == o.touchObject.curX&& (o.slideHandler (o.currentSlide), o.touchObject = {})}, e.prototype.swipeHandler = function (i) {var e = this; if (! (! 1 === e.options.swipe || "ontouchend" no documento &&! 1 === e.options.swipe ||! 1 === e. options.draggable && - 1! == i.type.indexOf ("mouse"))) switch (e.touchObject.fingerCount = i.originalEvent && void 0! == i.originalEvent.touches? i.originalEvent.touches.length: 1, e.touchObject.minSwipe = e.listWidth / e.options.touchThreshold, ! 0 === e.options.verticalSwiping && (e.touchObject.minSwipe = e.listHeight / e.options.touchThreshold), i.data.action) {case "start": e.swipeStart (i); quebra; caso "move": e.swipeMove (i); break; caso "end": e.swipeEnd (i)}}, e.prototype.swipeMove = função (i) {var e, t, o, s, n, r , l = isso; return n = void 0! == i.originalEvent? i.originalEvent.touches: null,! (! l.dragging || l.scrolling || n && 1! == n.length) && (e = l.getLeft (l.currentSlide), l.touchObject.curX = void 0! == n? n [0] .pageX: i.clientX, l.touchObject.curY = void 0! == n? n [0] .pageY: i.clientY, l.touchObject.swipeLength = Math.round (Math.sqrt (Math.pow (l.touchObject.curX-l.touchObject.startX, 2))), r = Math.round (Math.sqrt (Math.pow (l.touchObject.curY-l.touchObject.startY, 2)))! l.options.verticalSwiping &&! l.swiping && r> 4? (l.scrolling =! 0,! 1) :(! 0 === l.options.verticalSwiping && (l.touchObject.swipeLength = r), t = l.swipeDirection (), void 0! == i.originalEvent && l.touchObject.swipeLength> 4 && (l.swiping =! 0, i .preventDefault ()), s = (! 1 === l.options.rtl? 1: -1) * (l.touchObject.curX> l.touchObject.startX? 1: -1), 0 === l.options.verticalSwiping && (s = l.touchObject.curY> l.touchObject.startY? 1: -1), o = l.touchObject.swipeLength, l.touchObject.edgeHit =! 1,! 1 === l. options.infinite && (0 === l.currentSlide && "right" === t || l.currentSlide> = l.getDotCount () && "left" === t) && (o = l.touchObject.swipeComprimento * l .options.edgeFriction, l.touchObject.edgeHit =! 0) ,! 1 === l.options.vertical? l.swipeLeft = e + o * s: l.swipeLeft = e + o * (l. $ list.height () / l.listWidth) * s,! 0 === l.options.verticalSwiping && (l.swipeLeft = e + o * s), 0! == l.options.fade &&! 1! == l.options.touchMove && (! 0 === l.animating? (l.swipeLeft = nulo,! 1): void l.setCSS (l.swipeLeft))))}, e.prototype.swipeStart = function (i) {var e, t = isso; if (t.interrupted =! 0,1! == t.touchObject.fingerCount || t.slideCount <= t.options.slidesToShow) retornar t.touchObject = {} ,! 1; void 0! == i.originalEvent && void 0! == i.originalEvent.touches && (e = i.originalEvent.touches [0]), t.touchObject.startX = t.touchObject. curX = void 0! == e? e.pageX: i.clientX, t.touchObject.startY = t.touchObject.curY = void 0! == e? e.pageY: i.clientY, t.dragging =! 0 }, e.prototype.unfilterSlides = e.prototype.slickUnfilter = function () {var i = isto; null! == eu. $ slidesCache && (i.unload (), i. $ slideTrack.children (this.options.slide ) .detach (), i. $ slidesCache.appendTo (i. $ slideTrack), i.reinit ())}, e.prototype.unload = function () {var e = isto; i (".slick - cloned", e. $ slider) .remove (), e $ dots && e $ dots.remove (), e $ prevArrow && e.htmlExpr.test (e.options.prevArrow) && e. $ prevArrow.remove (), e. $ nextArrow && e.htmlExpr.test (e.options.nextArrow ) & quot; $ nextArrow.remove (), e $ slides.removeClass ("slick - slide slick - active slick - visível slick - current"). attr ("aria - oculto", "true"). css ("largura "," ")}, e.prototype.unslick = function (i) {var e = isto; e. $ slider.trigger (" unslick ", [e, i]), e.destroy ()}, e. prototype.updateArrows = function () {var i = isto; Math.floor (i.options.slidesToShow / 2), 0 === i.options.arrows && i.slideCount> i.options.slidesToShow &&! i.options.infinite && (i. $ prevArrow.removeClass ("slick - disabled").attr ("aria - disabled", "false"), i $ nextArrow.removeClass ("slick - disabled"). attr ("aria - disabled", "false"), 0 === i.currentSlide? $ prevArrow.addClass ("slick - disabled"). attr ("aria - disabled", "true"), i $ nextArrow.removeClass ("slick - disabled"). attr ("aria - disabled", "false ")): i.currentSlide> = i.slideCount-i.options.slidesToShow &&! 1 === i.options.centerMode? (i. $ nextArrow.addClass (" slick - disabled "). attr (" aria - disabled "," true "), i $ prevArrow.removeClass (" slick - disabled "). attr (" aria - disabled "," false ")): i.currentSlide> = i.slideCount-1 &&! 0 === i.options.centerMode && (i. $ nextArrow.addClass ("slick - disabled"). attr ("aria - disabled", "true"), i.$ prevArrow.removeClass ("slick - disabled"). attr ("aria - disabled", "false")))}, e.prototype.updateDots = function () {var i = isto; null! == i. $ dots && (i. $ dots.find ("li"). removeClass ("ativo - slick"). end (), i. $ dots.find ("li"). eq (Math.floor (i.currentSlide / i) .options.SlidesToScroll)). addClass ("slick - active"))}, e.prototype.visibility = função () {var i = this; i.options.autoplay && (documento [i.hidden]? i.interrupted = ! 0: i.interrupted =! 1)}, i.fn.slick = function () {var i, t, o = isto, s = argumentos [0], n = Array.prototype.slice.call (argumentos, 1), r = o.length, para (i = 0; i <r; i ++) if ("objeto" == typeof s || void 0 === s? O [i] .slick = new e (o [i], s): t = o [i] .slique [s] .apply (o [i] .slique, n), anule 0! == t) retorne t; retorne o}});prototype.updateDots = function () {var i = isto; null! == eu. $ dots && (i. $ dots.find ("li"). removeClass ("ativo - slick"). end (), i. $ dots.find ("li"). eq (Math.floor (i.currentSlide / i.options.slidesToScroll)). addClass ("ativo - slick"))}, e.prototype.visibility = function () {var i = this; i.options.autoplay && (documento [i.hidden]? i.interrupted =! 0: i.interrupted =! 1)}, i.fn.slick = function () {var i, t, o = isto , s = argumentos [0], n = Array.prototype.slice.call (argumentos, 1), r = o.length, para (i = 0; i <r; i ++) if ("objeto" == tipo de s || void 0 === s? o [i] .slique = new e (o [i], s): t = o [i] .slique [s] .apply (o [i] .slick, n) , void 0! == t) retorna t; retorna o}});prototype.updateDots = function () {var i = isto; null! == eu. $ dots && (i. $ dots.find ("li"). removeClass ("ativo - slick"). end (), i. $ dots.find ("li"). eq (Math.floor (i.currentSlide / i.options.slidesToScroll)). addClass ("ativo - slick"))}, e.prototype.visibility = function () {var i = this; i.options.autoplay && (documento [i.hidden]? i.interrupted =! 0: i.interrupted =! 1)}, i.fn.slick = function () {var i, t, o = isto , s = argumentos [0], n = Array.prototype.slice.call (argumentos, 1), r = o.length, para (i = 0; i <r; i ++) if ("objeto" == tipo de s || void 0 === s? o [i] .slique = new e (o [i], s): t = o [i] .slique [s] .apply (o [i] .slick, n) , void 0! == t) retorna t; retorna o}});slidesToScroll)). addClass ("slick - active"))}, e.prototype.visibility = função () {var i = this; i.options.autoplay && (documento [i.hidden]? i.interrupted =! 0: i.interrupted =! 1)}, i.fn.slick = function () {var i, t, o = isto, s = argumentos [0], n = Array.prototype.slice.call (argumentos, 1), r = o.length, para (i = 0; i <r; i ++) se ("objeto" == typeof s || void 0 === s? o [i] .slique = novo e (o [i] , s): t = o [i] .slique [s] .apply (o [i] .slique, n), anule 0! == t) retorne t; retorne o}});slidesToScroll)). addClass ("slick - active"))}, e.prototype.visibility = função () {var i = this; i.options.autoplay && (documento [i.hidden]? i.interrupted =! 0: i.interrupted =! 1)}, i.fn.slick = function () {var i, t, o = isto, s = argumentos [0], n = Array.prototype.slice.call (argumentos, 1), r = o.length, para (i = 0; i <r; i ++) se ("objeto" == typeof s || void 0 === s? o [i] .slique = novo e (o [i] , s): t = o [i] .slique [s] .apply (o [i] .slique, n), anule 0! == t) retorne t; retorne o}});void 0! == t) retorna t; retorna o}});void 0! == t) retorna t; retorna o}});